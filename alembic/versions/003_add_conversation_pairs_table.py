"""Add conversation_pairs table to associate questions and answers

Revision ID: 003_add_conversation_pairs
Revises: 002_add_chat_messages
Create Date: 2025-10-20 11:45:00.000000

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "003_add_conversation_pairs"
down_revision = "002_add_chat_messages"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "conversation_pairs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.String(length=100), nullable=False),
        sa.Column("user_question", sa.Text(), nullable=False),
        sa.Column("bot_response", sa.Text(), nullable=False),
        sa.Column("response_time_ms", sa.Integer(), nullable=True),
        sa.Column("sources_used", postgresql.ARRAY(sa.Text()), nullable=True),
        sa.Column("user_language", sa.String(length=10), nullable=True),
        sa.Column("bot_language", sa.String(length=10), nullable=True),
        sa.Column("topics_mentioned", postgresql.ARRAY(sa.Text()), nullable=True),
        sa.Column("technologies_detected", postgresql.ARRAY(sa.Text()), nullable=True),
        sa.Column("intent_category", sa.String(length=50), nullable=True),
        sa.Column("engagement_score", sa.Float(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("NOW()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["session_id"], ["chat_sessions.session_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_conversation_pairs_session_id",
        "conversation_pairs",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        "idx_conversation_pairs_created_at",
        "conversation_pairs",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        "idx_conversation_pairs_intent",
        "conversation_pairs",
        ["intent_category"],
        unique=False,
    )
    op.create_index(
        "idx_conversation_pairs_engagement",
        "conversation_pairs",
        ["engagement_score"],
        unique=False,
    )
    op.create_check_constraint(
        "check_response_time_positive", "conversation_pairs", "response_time_ms >= 0"
    )
    op.create_check_constraint(
        "check_engagement_score_range",
        "conversation_pairs",
        "engagement_score >= 0.0 AND engagement_score <= 1.0",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "check_engagement_score_range", "conversation_pairs", type_="check"
    )
    op.drop_constraint(
        "check_response_time_positive", "conversation_pairs", type_="check"
    )
    op.drop_index("idx_conversation_pairs_engagement", table_name="conversation_pairs")
    op.drop_index("idx_conversation_pairs_intent", table_name="conversation_pairs")
    op.drop_index("idx_conversation_pairs_created_at", table_name="conversation_pairs")
    op.drop_index("idx_conversation_pairs_session_id", table_name="conversation_pairs")
    op.drop_table("conversation_pairs")
    # ### end Alembic commands ###
